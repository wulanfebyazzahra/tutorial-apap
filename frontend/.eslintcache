[{"/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/index.js":"1","/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/App.js":"2","/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/reportWebVitals.js":"3","/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/components/List/index.js":"4","/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/components/Item/index.js":"5","/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/AppFunc.js":"6","/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/components/EmptyState/index.js":"7"},{"size":1225,"mtime":1607517794000,"results":"8","hashOfConfig":"9"},{"size":2727,"mtime":1607002142000,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1606965830000,"results":"11","hashOfConfig":"9"},{"size":552,"mtime":1606987339000,"results":"12","hashOfConfig":"9"},{"size":1597,"mtime":1606985123000,"results":"13","hashOfConfig":"9"},{"size":3885,"mtime":1607518487000,"results":"14","hashOfConfig":"9"},{"size":235,"mtime":1606986250000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1568i2z",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/index.js",[],"/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/App.js",["33"],"import React from \"react\";\n\nimport List from \"./components/List\";\nimport listMovies from \"./movies.json\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n\n  handleItemClick = item => {\n    const newItems = [...this.state.favItems];\n    const newItem = { ...item };\n\n    const targetInd = newItems.findIndex(it => it.id === newItem.id);\n    if (targetInd < 0) newItems.push(newItem);\n\n    this.setState({ favItems: newItems });\n  };\n\n  handleFavoriteClick = item => {\n    const newItems = [...this.state.favItems];\n    const newItem = { ...item };\n\n    const targetInd = newItems.findIndex(it => it.id === newItem.id);\n    if (targetInd < 0) newItems.push(newItem);\n    else newItems.splice(targetInd, 1);\n\n    this.setState({ favItems: newItems });\n  };\n  \n  state = {\n    favItems: [],\n    textDisplay: false\n  };\n\n  // handle toggle favorite\n  clickToggle = () => {\n    this.setState(currentState => ({\n      textDisplay: !currentState.textDisplay\n    }));\n  };\n\n  // handle delete favorite\n  handleDeleteClick = () => {\n    this.setState({favItems: []\n    });\n  };\n  \n  render(){\n    const { favItems, textDisplay } = this.state;\n    return (\n      <div className=\"container-fluid\">\n        <h1 className=\"text-center mt-3 mb-0\">Favorites Movie App</h1>\n        <p className=\"text-center text-secondary text-sm font-italic\">\n          (This is a <strong>class-based</strong> application)\n        </p>\n\n        <div className=\"d-flex justify-content-center align-items-center\">\n          <label className=\"switch\">\n            <input \n              type=\"checkbox\" \n              onClick={this.clickToggle} />\n              <span className=\"slider round\"></span>\n          </label>\n          <h4 className=\"fav-margin col-2\">Show Favorites</h4>\n        </div>\n\n        <br></br>\n        {!favItems.length == 0 ? (\n          <div className=\"d-flex justify-content-center align-items-center\">\n            <button className=\"btn btn btn-outline-dark\" onClick={this.handleDeleteClick}>\n              Delete Favorites\n            </button>\n          </div>\n          ) : (\n            null\n        )};\n\n        <div className=\"container pt-3\">\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <List\n                title=\"ListMovies\"\n                items={listMovies}\n                onItemClick={this.handleItemClick}\n              />\n            </div>\n\n            <div className={`col-sm ${textDisplay ? \"d-block\" : \"d-none\"}`}>\n              <List\n                title=\"My Favorites\"\n                items={favItems}\n                onItemClick={this.handleFavoriteClick}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}",["34","35"],"/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/reportWebVitals.js",[],"/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/components/List/index.js",[],"/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/components/Item/index.js",["36"],"import React from \"react\";\n\nexport default function Item(props) {\n    const { item, onChange } = props;\n    const { judul, sinopsis, genre, rating, tahun, imgUrl, checked } = item;\n\n    const handleChange = () =>\n        !! onChange && onChange({ ... item, checked: !checked});\n\n    return (\n        <button\n            type=\"button\"\n            className=\"list-group-item list-group-item-action flex-column align-items-start w-100 mb-3\"\n            onClick={handleChange}\n        >\n            <div className=\"d-flex\">\n                <div className=\"d-flex align-items-center\">\n                    <img className=\"mr-3\" alt={judul} src={imgUrl}/>\n                </div>\n                <div>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                        <h5 className=\"mb-1 font-weight-bold\">\n                            {judul} ({tahun})\n                            <input\n                                type={checked ? \"checkbox\" : \"hidden\"}                                \n                                className=\"ml-2\"\n                                checked={checked}\n                                onChange={handleChange}\n                            />\n                            \n                        </h5>\n                    </div>\n                    <p className=\"font-weight-bold mb-0 text-md\">Rating: {rating} / 10</p>\n                    <p className=\"mb-0 text-sm text-secondary\">{genre}</p>\n                    <p className=\"mb-1 text-md\">{sinopsis}</p>\n                </div>\n            </div>\n        </button>\n    )\n}","/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/AppFunc.js",[],"/Users/bulan/Desktop/Tutorial/tutorial-apap/frontend/src/components/EmptyState/index.js",[],{"ruleId":"37","severity":1,"message":"38","line":68,"column":27,"nodeType":"39","messageId":"40","endLine":68,"endColumn":29},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":8,"column":38,"nodeType":"47","messageId":"48","endLine":8,"endColumn":39,"fix":"49"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["50"],"no-negated-in-lhs",["51"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"52","text":"53"},"no-global-assign","no-unsafe-negation",[250,251],""]